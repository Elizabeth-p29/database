import pandas as pd
import time

class SchoolBase:
    def __init__(self, file_path):
        self.file_path = file_path
        self.students = pd.DataFrame()
        self.teachers = {}
        self.load_data()

    def load_data(self):
        df = pd.read_csv(self.file_path, header=None)
        df.columns = ["StLastName", "StFirstName", "Grade", "Classroom", "Bus", "TLastName", "TFirstname"]

        df["Grade"] = df["Grade"].astype(int)
        df["Classroom"] = df["Classroom"].astype(int)
        df["Bus"] = df["Bus"].astype(int)

        self.students = df
        self.teachers = {}

        for _, row in df.iterrows():
            teacher_key = (row["TLastName"], row["TFirstname"])
            if teacher_key not in self.teachers:
                self.teachers[teacher_key] = []
            self.teachers[teacher_key].append(row.to_dict())

    def search_by_student(self, last_name):
        results = self.students[self.students["StLastName"].str.lower() == last_name.lower()]

        if not results.empty:
            print(f"Студенти з прізвищем {last_name}:")
            for _, student in results.head(10).iterrows():
                print(f"{student['StLastName']} {student['StFirstName']} "
                      f"є вихованцем {student['TLastName']} {student['TFirstname']} "
                      f"у класі {student['Classroom']}")
            print("Показано лише 10 перших результатів.")
        else:
            print("За таким прізвищем студента не знайдено.")

    def search_by_student_bus(self, last_name):
        results = self.students[self.students["StLastName"].str.lower() == last_name.lower()]

        if not results.empty:
            for _, student in results.head(10).iterrows():
                print(f"Студент {student['StLastName']} {student['StFirstName']} "
                      f"їде автобусом №{student['Bus']}")
            print("Показано лише 10 перших результатів.")
        else:
            print("Студента з таким прізвищем не знайдено.")

    def search_by_teacher(self, last_name):
        found = False
        for (t_last, t_first), students in self.teachers.items():
            if t_last.lower() == last_name.lower():
                found = True
                print(f"Учні викладача {t_last} {t_first}:")
                for student in students[:10]:
                    print(f"{student['StLastName']} {student['StFirstName']}, клас {student['Classroom']}")
        print("Показано лише 10 перших результатів.")
        if not found:
            print("Викладача з таким прізвищем не знайдено.")

    def search_by_classroom(self, classroom):
        results = self.students[self.students["Classroom"] == classroom]

        if not results.empty:
            print(f"Студенти з класу {classroom}:")
            for _, student in results.head(10).iterrows():
                print(f"{student['StLastName']} {student['StFirstName']}, "
                      f"викладач {student['TLastName']} {student['TFirstname']}")
            print("Показано лише 10 перших результатів.")
        else:
            print("У цьому класі студентів не знайдено.")

    def search_by_bus_route(self, bus_route):
        results = self.students[self.students["Bus"] == bus_route]

        if not results.empty:
            print(f"Студенти, які їдуть автобусом №{bus_route}:")
            for _, student in results.head(10).iterrows():
                print(f"{student['StLastName']} {student['StFirstName']}, клас {student['Classroom']}")
            print("Показано лише 10 перших результатів.")
        else:
            print("За цим маршрутом студентів не знайдено.")

file_path = "students.txt"
database = SchoolBase(file_path)

while True:
    print("\nОпції: \n"
          "S[tudent]: <lastname> BUS\n"
          "S[tudent]: <lastname>\n"
          "T[eacher]: <lastname>\n"
          "C[lassroom]: <number>\n"
          "B[us]: <number>\n"
          "Q[uit]")

    choice = input("Виберіть команду: ").strip()

    start_time = time.time()

    if choice.lower().startswith("s"):
        parts = choice.split()
        last_name = parts[1]
        if len(parts) >= 3 and parts[2].lower() == "bus":
            database.search_by_student_bus(last_name)
        else:
            database.search_by_student(last_name)

    elif choice.lower().startswith("t"):
        last_name = choice.split()[1]
        database.search_by_teacher(last_name)

    elif choice.lower().startswith("c"):
        classroom = int(choice.split()[1])
        database.search_by_classroom(classroom)

    elif choice.lower().startswith("b"):
        bus_route = int(choice.split()[1])
        database.search_by_bus_route(bus_route)

    elif choice.lower().startswith("q"):
        print("Вихід з програми.")
        break

    else:
        print("Недійсна команда.")

    elapsed_time = time.time() - start_time
    print(f"Час пошуку: {elapsed_time:.4f} секунд")
